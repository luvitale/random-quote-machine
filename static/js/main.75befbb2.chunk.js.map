{"version":3,"sources":["components/QuoteText.js","components/QuoteButtons.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteText","props","className","id","icon","faQuoteLeft","this","quote","author","React","Component","QuoteButtons","postText","quoteText","quoteAuthor","title","href","faTwitter","faWhatsapp","onClick","newQuote","App","state","quotesData","getQuotes","bind","changeQuote","changeQuoteGUI","getRandomQuote","console","log","$","ajax","headers","Accept","url","urlQuotes","success","jsonQuotes","setState","JSON","parse","quotes","Math","floor","random","length","colors","color","document","body","style","backgroundColor","buttonElements","getElementsByClassName","Array","prototype","map","call","elem","getElementById","animate","opacity","duration","randomQuote","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kSAuBeA,E,kDAlBd,WAAYC,GAAQ,uCACbA,G,qDAIN,OACC,sBAAKC,UAAU,YAAf,UACC,sBAAKC,GAAG,aAAR,UACC,cAAC,IAAD,CAAiBC,KAAMC,IAAaF,GAAG,oBAAoB,sBAAMA,GAAG,OAAT,SAAiBG,KAAKL,MAAMM,WAExF,qBAAKJ,GAAG,eAAR,SACC,uBAAMA,GAAG,SAAT,eAAqBG,KAAKL,MAAMO,mB,GAZbC,IAAMC,W,QCuCfC,E,kDArCd,WAAYV,GAAQ,uCACbA,G,qDAIN,IAAMW,EAAW,IAAMN,KAAKL,MAAMY,UAAY,KAAOP,KAAKL,MAAMa,YAEhE,OACC,sBAAKZ,UAAU,eAAf,UAEC,mBAAGA,UAAU,SAASC,GAAG,cAAcY,MAAM,oBAC5CC,KAAM,8FAGKJ,EAJZ,SAOC,cAAC,IAAD,CAAiBR,KAAMa,QAGxB,mBAAGf,UAAU,SAASC,GAAG,iBAAiBY,MAAM,qBAC/CC,KAAM,sCACKJ,EAFZ,SAKC,cAAC,IAAD,CAAiBR,KAAMc,QAGxB,wBAAQhB,UAAU,SAASC,GAAG,YAAYgB,QAASb,KAAKL,MAAMmB,SAA9D,8B,GA7BuBX,IAAMC,W,iBCgHlBW,E,kDA9Gd,WAAYpB,GAAQ,IAAD,8BAClB,cAAMA,IACDqB,MAAQ,CACZT,UAAW,GACXC,YAAa,GACbS,WAAY,IAEb,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBAVJ,E,wDAaN,IAAD,OAGX,OAFAI,QAAQC,IAAI,cAELC,IAAEC,KAAK,CACbC,QAAS,CACRC,OAAQ,oBAETC,IAAK7B,KAAKL,MAAMmC,UAChBC,QAAS,SAAAC,GACkB,kBAAfA,GACV,EAAKC,SAAS,CACbhB,WAAYiB,KAAKC,MAAMH,GAAYI,c,uCAQvCb,QAAQC,IAAI,oBADI,IAGTP,EAAcjB,KAAKgB,MAAnBC,WAEP,OAAOA,EACNoB,KAAKC,MAAMD,KAAKE,SAAWtB,EAAWuB,W,uCAItB,IACVC,EAAUzC,KAAKL,MAAf8C,OAEHC,EAAQL,KAAKC,MAAMD,KAAKE,SAAWE,EAAOD,QAC9CG,SAASC,KAAKC,MAAMH,MAAQD,EAAOC,GACnCC,SAASC,KAAKC,MAAMC,gBAAkBL,EAAOC,GAE7C,IAAMK,EAAiBJ,SAASK,uBAAuB,UACvDC,MAAMC,UAAUC,IAAIC,KAAKL,GAAgB,SAAAM,GAAI,OAC5CA,EAAKR,MAAMC,gBAAkBL,EAAOC,MAGrCC,SAASW,eAAe,cAAcC,QAAQ,CAC7C,CAACC,QAAS,GACV,CAACA,QAAS,IACR,CACFC,SAAU,OAGXd,SAASW,eAAe,gBAAgBC,QAAQ,CAC/C,CAACC,QAAS,GACV,CAACA,QAAS,IACR,CACFC,SAAU,S,oCAKXlC,QAAQC,IAAI,gBAEZ,IAAMkC,EAAc1D,KAAKsB,iBACzBtB,KAAKiC,SAAS,CACb1B,UAAWmD,EAAYzD,MACvBO,YAAakD,EAAYxD,SAG1BF,KAAKqB,mB,+BAGI,IAAD,EACqCrB,KAAKgB,MAA/BT,GADX,EACDU,WADC,EACWV,WAAWC,EADtB,EACsBA,YAE9B,OACC,sBAAKZ,UAAU,MAAMC,GAAG,UAAxB,UACC,sBAAKA,GAAG,YAAR,UACC,cAAC,EAAD,CACCI,MAAOM,EACPL,OAAQM,IAET,cAAC,EAAD,CACCM,SAAUd,KAAKoB,YACfb,UAAWA,EACXC,YAAaA,OAGf,yCACI,mBAAGE,KAAK,8BAAR,6C,0CAMc,IAAD,OACnBV,KAAKkB,YAAYyC,MAAK,WACrB,EAAKvC,qB,GA1GUjB,IAAMC,WCMTwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBH,MAAK,YAAkD,IAA/CI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CACFxC,UAAU,yIACVW,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,eAIFE,SAASW,eAAe,SAM1BM,M","file":"static/js/main.75befbb2.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\n\nclass QuoteText extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"QuoteText\">\n\t\t\t\t<div id=\"quote-text\">\n\t\t\t\t\t<FontAwesomeIcon icon={faQuoteLeft} id=\"quote-left-icon\" /><span id=\"text\">{this.props.quote}</span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"quote-author\">\n\t\t\t\t\t<span id=\"author\">- {this.props.author}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default QuoteText;","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faWhatsapp } from '@fortawesome/free-brands-svg-icons';\n\n\nclass QuoteButtons extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\t\n\trender() {\n\t\tconst postText = '\"' + this.props.quoteText + '\" ' + this.props.quoteAuthor\n\t\t\n\t\treturn (\n\t\t\t<div className=\"QuoteButtons\">\n\t\t\t\n\t\t\t\t<a className=\"button\" id=\"tweet-quote\" title=\"Tweet this quote!\"\n\t\t\t\t\thref={'https://twitter.com/intent/tweet?' +\n\t\t\t\t\t\t'hashtags=freeCodeCamp,quotes&' +\n\t\t\t\t\t\t'related=lucianonavitale&' +\n\t\t\t\t\t\t'text=' + postText\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<FontAwesomeIcon icon={faTwitter} />\n\t\t\t\t</a>\n\t\t\t\t\n\t\t\t\t<a className=\"button\" id=\"whatsapp-quote\" title=\"Share on WhatsApp!\"\n\t\t\t\t\thref={'https://api.whatsapp.com/send?' +\n\t\t\t\t\t\t'text=' + postText\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<FontAwesomeIcon icon={faWhatsapp} />\n\t\t\t\t</a>\n\n\t\t\t\t<button className=\"button\" id=\"new-quote\" onClick={this.props.newQuote}>\n\t\t\t\t\tNew quote\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t};\n};\n\nexport default QuoteButtons;","import './App.css';\nimport QuoteText from './components/QuoteText.js';\nimport QuoteButtons from './components/QuoteButtons.js';\nimport React from 'react';\nimport $ from 'jquery';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tquoteText: \"\",\n\t\t\tquoteAuthor: \"\",\n\t\t\tquotesData: [],\n\t\t};\n\t\tthis.getQuotes = this.getQuotes.bind(this);\n\t\tthis.changeQuote = this.changeQuote.bind(this);\n\t\tthis.changeQuoteGUI = this.changeQuoteGUI.bind(this);\n\t\tthis.getRandomQuote = this.getRandomQuote.bind(this);\n\t};\n\t\n\tgetQuotes() {\n\t\tconsole.log(\"Get quotes\");\n\t\t\n\t\treturn $.ajax({\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\turl: this.props.urlQuotes,\n\t\t\tsuccess: jsonQuotes => {\n\t\t\t\tif (typeof jsonQuotes === 'string') {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tquotesData: JSON.parse(jsonQuotes).quotes\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\t\n\tgetRandomQuote() {\n\t\tconsole.log(\"Get random quote\");\n\t\t\n\t\tconst {quotesData} = this.state;\n\t\t\n\t\treturn quotesData[\n\t\t\tMath.floor(Math.random() * quotesData.length)\n\t\t];\n\t};\n\t\n\tchangeQuoteGUI() {\n\t\tconst {colors} = this.props;\n\t\t\n\t\tlet color = Math.floor(Math.random() * colors.length);\n\t\tdocument.body.style.color = colors[color];\n\t\tdocument.body.style.backgroundColor = colors[color];\n\t\t\n\t\tconst buttonElements = document.getElementsByClassName(\"button\");\n\t\tArray.prototype.map.call(buttonElements, elem => \n\t\t\telem.style.backgroundColor = colors[color]\n\t\t);\n\t\t\n\t\tdocument.getElementById(\"quote-text\").animate([\n\t\t\t{opacity: 0},\n\t\t\t{opacity: 1}\n\t\t], {\n\t\t\tduration: 1600\n\t\t});\n\t\t\n\t\tdocument.getElementById(\"quote-author\").animate([\n\t\t\t{opacity: 0},\n\t\t\t{opacity: 1}\n\t\t], {\n\t\t\tduration: 1600\n\t\t});\n\t}\n\t\n\tchangeQuote() {\n\t\tconsole.log(\"Change quote\");\n\t\t\n\t\tconst randomQuote = this.getRandomQuote();\n\t\tthis.setState({\n\t\t\tquoteText: randomQuote.quote,\n\t\t\tquoteAuthor: randomQuote.author\n\t\t});\n\t\t\n\t\tthis.changeQuoteGUI();\n\t};\n\t\n\trender() {\n\t\tconst {quotesData, quoteText, quoteAuthor} = this.state;\n\t\t\n\t\treturn (\n\t\t\t<div className=\"App\" id=\"wrapper\">\n\t\t\t\t<div id=\"quote-box\">\n\t\t\t\t\t<QuoteText\n\t\t\t\t\t\tquote={quoteText}\n\t\t\t\t\t\tauthor={quoteAuthor}\n\t\t\t\t\t/>\n\t\t\t\t\t<QuoteButtons\n\t\t\t\t\t\tnewQuote={this.changeQuote}\n\t\t\t\t\t\tquoteText={quoteText}\n\t\t\t\t\t\tquoteAuthor={quoteAuthor}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<footer>\n\t\t\t\t\tBy <a href=\"https://gitlab.com/luvitale\"> Luciano Nahuel Vitale </a>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t};\n\t\n\tcomponentDidMount() {\n\t\tthis.getQuotes().then(() => {\n\t\t\tthis.changeQuote()\n\t\t});\n\t}\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App\n\t\turlQuotes='https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n\t\tcolors={[\n\t\t  '#16a085',\n\t\t  '#27ae60',\n\t\t  '#2c3e50',\n\t\t  '#f39c12',\n\t\t  '#e74c3c',\n\t\t  '#9b59b6',\n\t\t  '#FB6964',\n\t\t  '#342224',\n\t\t  '#472E32',\n\t\t  '#BDBB99',\n\t\t  '#77B1A9',\n\t\t  '#73A857'\n\t\t]}\n\t/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}